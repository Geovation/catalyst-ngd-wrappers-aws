name: Release Build

on:
  release:
    types: [published]

env:
  PYTHON_VERSION: '3.13'

jobs:
  build-and-package:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Python version
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Create a directory for the Lambda deployment
        run: mkdir -p aws_lambda_function_release

      - name: Install dependencies into the Lambda deployment directory
        run: |
          pip install --platform manylinux2014_x86_64 --implementation cp --python-version ${{ env.PYTHON_VERSION }} --only-binary=:all: --upgrade shapely -t aws_lambda_function_release
          pip install --platform manylinux2014_x86_64 --implementation cp --python-version ${{ env.PYTHON_VERSION }} --only-binary=:all: --upgrade -r requirements.txt -t aws_lambda_function_release

      - name: Add Lambda Function code to artifact directory
        run: |
            mv lambda_function.py unit_tests.py aws_lambda_function_release/

      #- name: Upload release artifact
        #uses: actions/upload-artifact@v4
        #with:
          #name: aws-lambda-function-release
          #path: aws_lambda_function_release/

      - name: Create release zip
        run: |
          cd aws_lambda_function_release
          zip -r ../${{ github.event.release.tag_name }}-release.zip .
          cd ..

      - name: Upload assets to release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: ${{ github.event.release.tag_name }}-release.zip
          asset_name: ${{ github.event.release.tag_name }}-release.zip
          asset_content_type: application/zip